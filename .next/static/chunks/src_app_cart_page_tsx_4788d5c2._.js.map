{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/FPT%20Polytechnic/frame2/frame2/src/app/cart/page.tsx"],"sourcesContent":["'use client';\r\nimport { useEffect, useReducer } from 'react';\r\nimport CartList from '../component/CartList';\r\nimport styles from './cart.module.css';\r\n\r\ninterface CartItem {\r\n    id: string;\r\n    name: string;\r\n    price: number;\r\n    quantity: number;\r\n    image: string;\r\n}\r\n\r\ntype Action =\r\n    | { type: 'LOAD_CART'; payload: CartItem[] }\r\n    | { type: 'INCREASE'; id: string }\r\n    | { type: 'DECREASE'; id: string }\r\n    | { type: 'REMOVE'; id: string }\r\n    | { type: 'CHECKOUT' };\r\n\r\ninterface State {\r\n    items: CartItem[];\r\n    total: number;\r\n}\r\n\r\nconst initialState: State = {\r\n    items: [],\r\n    total: 0,\r\n};\r\n\r\nconst cartReducer = (state: State, action: Action): State => {\r\n    let updatedItems: CartItem[] = [];\r\n\r\n    switch (action.type) {\r\n        case 'LOAD_CART':\r\n            return {\r\n                items: action.payload,\r\n                total: calculateTotal(action.payload),\r\n            };\r\n\r\n        case 'INCREASE':\r\n            updatedItems = state.items.map(item =>\r\n                item.id === action.id ? { ...item, quantity: item.quantity + 1 } : item\r\n            );\r\n            saveToStorage(updatedItems);\r\n            return { items: updatedItems, total: calculateTotal(updatedItems) };\r\n\r\n        case 'DECREASE':\r\n            updatedItems = state.items.map(item =>\r\n                item.id === action.id && item.quantity > 1\r\n                    ? { ...item, quantity: item.quantity - 1 }\r\n                    : item\r\n            );\r\n            saveToStorage(updatedItems);\r\n            return { items: updatedItems, total: calculateTotal(updatedItems) };\r\n\r\n        case 'REMOVE':\r\n            updatedItems = state.items.filter(item => item.id !== action.id);\r\n            saveToStorage(updatedItems);\r\n            return { items: updatedItems, total: calculateTotal(updatedItems) };\r\n\r\n        case 'CHECKOUT':\r\n            localStorage.removeItem('cart');\r\n            return { items: [], total: 0 };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst calculateTotal = (items: CartItem[]) => {\r\n    return items.reduce((acc, item) => acc + item.price * item.quantity, 0);\r\n};\r\n\r\nconst saveToStorage = (items: CartItem[]) => {\r\n    localStorage.setItem('cart', JSON.stringify(items));\r\n};\r\n"],"names":[],"mappings":";AAAA;AAyBA,MAAM,eAAsB;IACxB,OAAO,EAAE;IACT,OAAO;AACX;AAEA,MAAM,cAAc,CAAC,OAAc;IAC/B,IAAI,eAA2B,EAAE;IAEjC,OAAQ,OAAO,IAAI;QACf,KAAK;YACD,OAAO;gBACH,OAAO,OAAO,OAAO;gBACrB,OAAO,eAAe,OAAO,OAAO;YACxC;QAEJ,KAAK;YACD,eAAe,MAAM,KAAK,CAAC,GAAG,CAAC,CAAA,OAC3B,KAAK,EAAE,KAAK,OAAO,EAAE,GAAG;oBAAE,GAAG,IAAI;oBAAE,UAAU,KAAK,QAAQ,GAAG;gBAAE,IAAI;YAEvE,cAAc;YACd,OAAO;gBAAE,OAAO;gBAAc,OAAO,eAAe;YAAc;QAEtE,KAAK;YACD,eAAe,MAAM,KAAK,CAAC,GAAG,CAAC,CAAA,OAC3B,KAAK,EAAE,KAAK,OAAO,EAAE,IAAI,KAAK,QAAQ,GAAG,IACnC;oBAAE,GAAG,IAAI;oBAAE,UAAU,KAAK,QAAQ,GAAG;gBAAE,IACvC;YAEV,cAAc;YACd,OAAO;gBAAE,OAAO;gBAAc,OAAO,eAAe;YAAc;QAEtE,KAAK;YACD,eAAe,MAAM,KAAK,CAAC,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,OAAO,EAAE;YAC/D,cAAc;YACd,OAAO;gBAAE,OAAO;gBAAc,OAAO,eAAe;YAAc;QAEtE,KAAK;YACD,aAAa,UAAU,CAAC;YACxB,OAAO;gBAAE,OAAO,EAAE;gBAAE,OAAO;YAAE;QAEjC;YACI,OAAO;IACf;AACJ;AAEA,MAAM,iBAAiB,CAAC;IACpB,OAAO,MAAM,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,KAAK,GAAG,KAAK,QAAQ,EAAE;AACzE;AAEA,MAAM,gBAAgB,CAAC;IACnB,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;AAChD","debugId":null}}]
}